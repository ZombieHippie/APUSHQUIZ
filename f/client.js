
/* -------------------------------------------------------------------------
 * !!! AUTOMATICALLY GENERATED CODE !!!
 * -------------------------------------------------------------------------
 * This file was automatically generated by the OrangeBits compiler.  
 * Compiled on:  1/2/2013 7:32:51 PM
 * Compiled by: Isaac\Cole
 * Source: C:\Users\Cole\Documents\My Web Sites\APUSHQUIZ\f\client.coffee      
 * -------------------------------------------------------------------------*/


var $, Connection, addAnswer, answer, connection, delay, gameStarted, getConnection, hasWon, interpretQuestion, loser, loserTimeout, numberOfAnswers, reset, saySorry, startGame, submitAnswer, timeout, winner, writeTimeout;

$ = Zepto;

connection = 0;

$(function() {
  var wsUri, wss;
  $('#footer').text('Waiting for the game to Start...');
  wsUri = "ws://192.168.0.2:238/";
  wss = new window.WebSocket(wsUri);
  return connection = new Connection(wss);
});

loserTimeout = 0;

numberOfAnswers = 0;

gameStarted = false;

hasWon = false;

reset = false;

answer = 1;

getConnection = function() {
  return connection;
};

startGame = function() {
  gameStarted = true;
  return $('#footer').text('Ready.');
};

submitAnswer = function(ans) {
  if (loserTimeout === 0 && !hasWon) {
    console.log("Compare '" + ans + "' == '" + answer + "'");
    if (ans === answer) {
      return winner();
    } else {
      return loser();
    }
  }
};

delay = function(ms, func) {
  return setTimeout(func, ms);
};

winner = function() {
  $('#footer').text('Winner you are!');
  hasWon = true;
  return getConnection().Send('F');
};

loser = function() {
  $('#footer').text('Loser you be!');
  loserTimeout = 8;
  return delay(1000, function() {
    return timeout();
  });
};

saySorry = function() {
  $('#footer').text('Someone beat you to the punch!');
  return reset = true;
};

timeout = function() {
  if (reset) {
    reset = false;
    return;
  }
  if (loserTimeout <= 1) {
    $('#footer').text('Answer again');
    return loserTimeout = 0;
  } else {
    loserTimeout -= 1;
    writeTimeout();
    return delay(1000, function() {
      return timeout();
    });
  }
};

writeTimeout = function() {
  $('#footer').text('Answer again in ');
  $('#footer').append(loserTimeout);
  return $('#footer').append('s');
};

interpretQuestion = function(dA) {
  var A, _i, _len, _ref;
  console.log(dA);
  if (numberOfAnswers > 0 && !hasWon) saySorry();
  numberOfAnswers = 0;
  $('#theAnswers').text('');
  _ref = dA.slice(2, (dA.length - 2) + 1 || 9e9);
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    A = _ref[_i];
    addAnswer(A);
  }
  $('#theQuestion').text(dA[1]);
  console.log(dA[dA.length - 1]);
  answer = parseInt(dA[dA.length - 1], 10);
  console.log(answer);
  return hasWon = false;
};

addAnswer = function(A) {
  var ans;
  numberOfAnswers++;
  ans = "<li class='answer a" + numberOfAnswers + "' onclick='submitAnswer(" + numberOfAnswers + ");'>" + A + "</li>";
  console.log(numberOfAnswers);
  return $('#theAnswers').append(ans);
};

Connection = (function() {

  function Connection(wss) {
    this.wss = wss;
    this.wss.onopen = function() {
      return startGame();
    };
    this.wss.onmessage = function(evt) {
      return getConnection().Receive(evt);
    };
  }

  Connection.prototype.Receive = function(msg) {
    var dA;
    dA = msg.data.split("::");
    if (dA[0] === 'q') interpretQuestion(dA);
    if (dA[0] === 's') return $('#notice').text(dA[1]);
  };

  Connection.prototype.Send = function(msg) {
    return this.wss.send(msg);
  };

  return Connection;

})();
